server {
    listen 80;
    listen [::]:80;

    server_name api.localhost;
    charset utf-8;

    return 301  https://$host$request_uri;
}

server {

    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name api.localhost;

    client_max_body_size 9999m;

    proxy_buffer_size 256k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 512k;


   
    location / {
        client_max_body_size 9999m;

        if ($request_method = "OPTIONS") {
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';

            add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

            return 204;
        }


        include conf/proxy.conf;

        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;
        send_timeout 300;

        proxy_pass http://app;
        proxy_redirect     off;

    }

    location /static {
        autoindex on;
        alias /var/www/app/static/;
    }
    location /templates {
        autoindex on;
        alias /var/www/app/templates/;
    }


    location /media {
    #   internal; # 외부에서 접근하지 못하도록 internal 설정
        add_header 'Access-Control-Allow-Origin' '*' always;
        autoindex on;
        alias /var/www/app/media/;
    }

    location /protected/ {
        internal;
        alias /var/www/app/static/download/;
    }
}
