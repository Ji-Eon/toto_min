user  nginx;

worker_processes  auto;
worker_rlimit_nofile 200000;

error_log  /var/log/nginx/error.log debug;
pid        /var/run/nginx.pid;


# NGINX는 event driven 방식
events {
    worker_connections  4000;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    include       /etc/nginx/conf.d/*.conf;

    client_max_body_size 9999m; # 업로드 시 body 사이즈 체크를 하지 않는다.
    # client_body_buffer_size 256k;

    server_name_in_redirect off;
    server_tokens off;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log off;

    sendfile        on;
    tcp_nopush     on;
    tcp_nodelay on;

    reset_timedout_connection on;

    keepalive_timeout 90;
    keepalive_requests 100000;

    gzip  on;
    gzip_comp_level 9;


    # SSL Configuration
    # ssl on; 사용하지않기 -> 400 error 발생
    include conf/ssl.conf;


    # HTTP2 Configuration
    http2_body_preread_size 256k;


    # upstream
    upstream app {
        server app:8000;
        server app2:8001;
        server app3:8002;
    }

    upstream upload_app {
        server upload_app:8003;
        server upload2_app:8004;
        server upload3_app:8005;
        server upload4_app:8006;
        server upload5_app:8007;
        server upload6_app:8008;
    }


    # Client setting
    # RCDM 클라이언트 관련 설정
    include conf/frontend.conf;

    ## Backend configure
    include conf/backend.conf;
}




