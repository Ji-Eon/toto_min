# Generated by Django 2.2.19 on 2022-08-12 17:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Consulting_Board',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('contents', models.TextField(blank=True, null=True)),
                ('click_hit', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='수정일')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Consulting_Board', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Free_Board',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('contents', models.TextField(blank=True, null=True)),
                ('click_hit', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='수정일')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Free_Board', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Region_Board',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('region', models.CharField(choices=[('서울특별시', '서울특별시'), ('경기도', '경기도'), ('인천광역시', '인천광역시'), ('강원도', '강원도'), ('충청북도', '충청북도'), ('충청남도', '충청남도'), ('전라남도', '전라남도'), ('전라북도', '전라북도'), ('광주광역시', '광주광역시'), ('경상남도', '경상남도'), ('경상북도', '경상북도'), ('제주특별자치도', '제주특별자치도'), ('NONE', 'NONE')], default='NONE', max_length=300, null=True)),
                ('contents', models.TextField(blank=True, null=True)),
                ('click_hit', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='수정일')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Region_Board', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='School_Board',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('contents', models.TextField(blank=True, null=True)),
                ('click_hit', models.PositiveIntegerField(default=0)),
                ('school', models.CharField(choices=[('유치원', '유치원'), ('초등학교', '초등학교'), ('중학교', '중학교'), ('고등학교', '고등학교'), ('특수학교', '특수학교'), ('NONE', 'NONE')], default='NONE', max_length=300, null=True)),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='수정일')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='School_Board', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='School_Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('School_Board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='School_like', to='community_board.School_Board')),
                ('users', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='School_like_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='School_comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('School_Board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='School_comment', to='community_board.School_Board')),
                ('users', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='School_comment_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Region_Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like_type', models.CharField(choices=[('LIKE', 'LIKE'), ('DISLIKE', 'DISLIKE'), ('NONE', 'NONE')], default='NONE', max_length=300, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('Region_Board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Region_like', to='community_board.Region_Board')),
                ('users', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Region_like_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Region_comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('Region_Board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Region_comment', to='community_board.Region_Board')),
                ('users', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Region_comment_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Free_Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('Free_Board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Free_like', to='community_board.Free_Board')),
                ('users', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Free_like_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Free_comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('Free_Board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Free_comment', to='community_board.Free_Board')),
                ('users', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Free_comment_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Consulting_Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('Consulting_Board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Consulting_like', to='community_board.Consulting_Board')),
                ('users', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Consulting_like_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Consulting_comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정일')),
                ('Consulting_Board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Consulting_comment', to='community_board.Consulting_Board')),
                ('users', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Consulting_comment_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
